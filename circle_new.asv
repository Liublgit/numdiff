function U =  circle_new(fval,M,N)
%fval: (MxN) x1 vector with rhs-value in grid points
%Direction of iteration: First r (from 0 to 1) and then theta (from 0 to
%2pi)
%M: number of interior points in theta-direction
%N: number of interior points in r-direction
%returns value U MxN x 1 in the grid points
h = 2/(2*N+1); %distance between nodes in r-dir
%Construct A, the sparse diagonal block matrix diag(I,T,I)
r_num = (1:N) - 1/2;
lam = 1./(2*(r_num));
r=r_num*h; 
k =2*pi/M; % vektor med k-verdier,
r_values = repmat(r_num,M,1)';
r_val = reshape(r_values,M*N,1);

lam_left = [lam(2:end),1];
lam_right = [1;lam(2:(end-1))];
lam_values_l = repmat(lam_left,M,1)';
lam_val_l = reshape(lam_values_l,M*N,1);
lam_values_r = repmat(lam_right,M,1)';
lam_val_r = reshape(lam_values,M*N,1);



e = ones(M*N,1);
f = ones(M*N,1);
f(N:N:N*M) = 0;
g = [1;f(1:end-1)];
A = spdiags([1./(r_val.*k).^2.*e,1./(r_val.*k).^2.*e,(1 - lam_val).*f,(-2 -2./(r_val.*k).^2).*e, (1 + lam_val).*g, 1./(r_val.*k).^2.*e,1./(r_val.*k).^2.*e ],[-(M-1)*N,-N,-1,0,1,N,(M-1)*N],M*N,M*N);

%solve the linear system to find U
U = A\fval;
end